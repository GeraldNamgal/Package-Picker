name: Pipeline Tests
on:
  push:
    paths:
      - 'pipeline/scraper/**'
      - '.github/workflows/test_pipeline.yml'
  pull_request:
    paths:
      - 'pipeline/scraper/**'
      - '.github/workflows/test_pipeline.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python3
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - name: Display Python version and path
        run: python -c "import sys; print(sys.version)"
      
      - name: Install dependencies
        run: |
          sudo apt-get install libsnappy-dev
          python -m pip install --upgrade pip
          python -m pip install -r ./pipeline/requirements.txt

      - name: Python run script
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: postgres
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cd ./pipeline && GH_TOKEN=$GH_TOKEN python client.py
